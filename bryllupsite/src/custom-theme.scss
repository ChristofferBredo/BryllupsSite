
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use 'sass:map';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$bryllupsite-primary: mat.define-palette(mat.$green-palette, 900);
$bryllupsite-accent: mat.define-palette(mat.$brown-palette, 500);
$bryllupsite-typography: mat.define-typography-config(
  $font-family: 'Playfair display',
);

// The warn palette is optional (defaults to red).
$bryllupsite-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$bryllupsite-theme: mat.define-light-theme((
  color: (
    primary: $bryllupsite-primary,
    accent: $bryllupsite-accent,
    warn: $bryllupsite-warn,
  ),
  typography: $bryllupsite-typography,
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($bryllupsite-theme);

@mixin color($bryllupsite-theme) {
    // Get the color config from the theme.
    $color-config: mat.get-color-config($bryllupsite-theme);

    // Get the primary color palette from the color-config.
    $primary-palette: map.get($color-config, 'primary');
    $secondary-palette: map.get($color-config, 'accent');

    * {
        color:  mat.get-color-from-palette($secondary-palette, 900);
    }

    a {
        &:hover {
            color: mat.get-color-from-palette($primary-palette, 600);
        }
    }
}

@mixin typography($bryllupsite-theme) {
    // Get the typography config from the theme.
    $typography-config: mat.get-typography-config($bryllupsite-theme);
    
    $font-family: mat.font-family($typography-config);

    * {
        font-family: $font-family;
    }

    .light-font {
        font-weight: lighter;
    }

    .bold-font {
        font-weight: bold;
    }
    .bolder-font {
        font-weight: bolder;
    }
}

@mixin theme($bryllupsite-theme) {
    $color-config: mat.get-color-config($bryllupsite-theme);
    @if $color-config != null {
        @include color($bryllupsite-theme)
    }

    $typography-config: mat.get-typography-config($bryllupsite-theme);
    @if $typography-config != null {
        @include typography($bryllupsite-theme)
    }
}

@include theme($bryllupsite-theme);